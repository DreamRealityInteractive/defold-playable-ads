go.property("radius", 175)
go.property("count", 14)
go.property("movement_mode", 0)

go.property("_target_show_anim", 0)

local function level_show_complete(self, url, property)
	msg.post("/game", "level_ready")
end

function init(self)
	-- self.targets = {}

	for i = 1, self.count do
		local angle = 360 / self.count * i / 180 * math.pi
		local target_radius = self.radius
		local target = nil
		if i % 40 == 0 then
			target = factory.create("#target_factory", vmath.vector3())
		else
			target = factory.create("#duck_factory", vmath.vector3())
		end
		go.set_parent(target, go.get_id())

		msg.post(target, "move", {
			angle = angle,
			radius = target_radius,
			mode = self.movement_mode
		})

		-- self.targets[#self.targets + 1] = target
	end

	msg.post("/interface", "level_show")

	go.animate("#", "_target_show_anim", go.PLAYBACK_ONCE_FORWARD, 1, go.EASING_OUTCUBIC, 0.35, 0.1, level_show_complete)
end

function final(self)
	msg.post("/interface", "level_hide")
end

function update(self, dt)
end

function on_message(self, message_id, message, sender)
end

function on_input(self, action_id, action)
end
